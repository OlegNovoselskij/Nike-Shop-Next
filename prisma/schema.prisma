generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  fullName  String
  email     String   @unique
  password  String
  role UserRole @default(USER)
  verified DateTime?

  provider String?
  providerId String?

  carts Cart?
  orders Order[]
  verificationCode VerificationCode?
  recentlyViewed RecentlyViewed[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  products Product[]
}

model Product {
  id         Int       @id @default(autoincrement())
  name       String
  imageUrl   String
  price      Int
  views       Int       @default(0)
  ordersCount Int       @default(0)
  category   Category  @relation(fields: [categoryId], references: [id]) 
  categoryId Int
  cartItems  CartItem[] 
  viewedBy    RecentlyViewed[]

  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

model Cart {
  id          Int       @id @default(autoincrement())
  user        User?     @relation(fields: [userId], references: [id]) 
  userId      Int @unique
  items       CartItem[] 
  token       String
  totalAmount Int       @default(0)

  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model CartItem {
  id         Int       @id @default(autoincrement())
  product    Product   @relation(fields: [productId], references: [id]) 
  productId  Int
  cart       Cart      @relation(fields: [cartId], references: [id]) 
  cartId     Int
  quantity   Int       @default(1)

  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

model Order {
    id         Int       @id @default(autoincrement())

    user User? @relation(fields: [userId], references: [id])
    userId Int?

    token String

    totalAmount Int
    status OrderStatus
    paymentId String?

    items Json 

    fullName String
    adress String
    email String
    phone String
    comment String?

    createdAt  DateTime  @default(now())
    updatedAt  DateTime  @updatedAt

}

model VerificationCode {
    id         Int       @id @default(autoincrement())
    
    user User @relation(fields: [userId], references: [id])
    userId Int @unique

    code String

    createdAt  DateTime  @default(now())
}

model RecentlyViewed {
  id        String  @id @default(cuid())
  userId    Int
  productId Int
  viewedAt  DateTime @default(now())

  user    User    @relation(fields: [userId], references: [id])
  product Product @relation(fields: [productId], references: [id])
  @@unique([userId, productId])
}



enum OrderStatus {
    PENDING
    SUCCEEDED
    CANCELLED
}

enum UserRole {
    USER 
    ADMIN
}